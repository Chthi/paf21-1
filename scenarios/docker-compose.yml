# this is the only docker-compose 2.x version supporting NVIDIA GPUs
version: '2.3'

services:
  carla-simulator:
    image: carla-sim
    runtime: nvidia
    security_opt:
      - seccomp:unconfined
    environment:
      SDL_VIDEODRIVER: offscreen
      SDL_HINT_CUDA_DEVICE: 0
    ports:
      - 2000:2000
      - 2001:2001
      - 2002:2002

  roscore:
    image: ros:noetic
    command: roscore
    ports:
      - 11311:11311

  carla-ros-bridge:
    image: carla-ros-bridge
    runtime: nvidia
    security_opt:
      - seccomp:unconfined
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix
      - ./config:/config/settings
    environment:
      SDL_VIDEODRIVER: x11
      SDL_HINT_CUDA_DEVICE: 0
      DISPLAY: ${DISPLAY}
      QT_X11_NO_MITSHM: 1
      ROS_MASTER_URI: http://roscore:11311
      ROS_HOSTNAME: carla-ros-bridge
      CARLA_SIM_HOST: carla-simulator
      CARLA_OPENSCENARIO_FILE: /config/FollowLeadingVehicle.xosc
      CONFIG_FILE: ${CONFIG_FILE}

  competition_manager:
    image: competition_manager
    environment:
      ROS_MASTER_URI: http://roscore:11311
      ROS_HOSTNAME: competition_manager

  vehicle_control:
    image: vehicle_control
    volumes:
      - './logs:/app/logs'
    environment:
      ROS_MASTER_URI: http://roscore:11311
      ROS_HOSTNAME: vehicle_control

  perception:
    image: perception
    volumes:
      - './logs:/app/logs'
    environment:
      ROS_MASTER_URI: http://roscore:11311
      ROS_HOSTNAME: perception

  # WARNING: this recorder might write several dozens of gigabites within minutes
  #          use it carefully and only for recording
  # rosbag-recorder:
  #   image: ros:noetic
  #   # command: rosbag record -O /app/recordings/recording.bag --all
  #   command: rosbag record -O /app/recordings/recording.bag -e "/carla/ego_vehicle/(.*)" -x "(.*)ackermann_cmd(.*)" --split --size=1024 /chatter
  #   volumes:
  #     - './recordings:/app/recordings'
  #   environment:
  #      ROS_MASTER_URI: http://roscore:11311
  #      ROS_HOSTNAME: rosbag-recorder
